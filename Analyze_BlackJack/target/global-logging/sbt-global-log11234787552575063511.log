[debug] > Exec(all {file:/C:/Users/soroc/Documents/Scala-workspace/Analyze_BlackJack/}analyze_blackjack/products {file:/C:/Users/soroc/Documents/Scala-workspace/Analyze_BlackJack/}analyze_blackjack/test:products, None, None)
[debug] Evaluating tasks: Compile / products, Test / products
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 24 Scala sources to C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\target\scala-3.0.0\classes ...
[error] -- [E040] Syntax Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\calculation\HandStatisticsCreater.scala:48:63 
[error] 48 |    val paralellResult: ParSeq[Future[Seq[Hand]]] = hand.toSeq.(x => futureLoopHit(hand :+ x, deck :- x))
[error]    |                                                               ^
[error]    |                                   an identifier expected, but '(' found
[error] -- [E040] Syntax Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\calculation\HandStatisticsCreater.scala:59:4 
[error] 59 |    try {
[error]    |    ^^^
[error]    |    an identifier expected, but 'try' found
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:26:7 
[error] 26 |  with HandStatisticsCreater with HandProbabilityCalculator{
[error]    |       ^^^^^^^^^^^^^^^^^^^^^
[error]    |       Not found: type HandStatisticsCreater
[error] -- Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:30:14 
[error] 30 |      readInt(user).flatMap(x => x match {
[error]    |              ^^^^
[error]    |too many arguments for method readInt in object MonadicIO: (): cats.effect.IO[Either[NumberFormatException, Int]]
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\calculation\HandProbsCreater.scala:19:10 
[error] 19 |     with HandStatisticsCreater {
[error]    |          ^^^^^^^^^^^^^^^^^^^^^
[error]    |          Not found: type HandStatisticsCreater
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:40:45 
[error] 40 |class DetailsStrategy(probabilityStatistics: ProbabilityStatistics[Int]) {
[error]    |                                             ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E008] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\io\BlackJackIO.scala:10:27 
[error] 10 |import com.analysis.common.AnalysisIO._
[error]    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[error]    |       value AnalysisIO is not a member of com.analysis.common
[error] -- Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:40:65 
[error] 40 |        case Left(_)  => putStrLn(errMsg) *> readActionRepetition()
[error]    |                                             ^^^^^^^^^^^^^^^^^^^^^^
[error]    |missing argument for parameter msg of method readActionRepetition in object Analyze_BlackJack: (msg: String, errMsg: String): cats.effect.IO[com.analysis.blackJack.Action]
[error] -- Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:48:65 
[error] 48 |        case Left(_)  => putStrLn(errMsg) *> readActionRepetition()
[error]    |                                             ^^^^^^^^^^^^^^^^^^^^^^
[error]    |missing argument for parameter msg of method readActionRepetition in object Analyze_BlackJack: (msg: String, errMsg: String): cats.effect.IO[com.analysis.blackJack.Action]
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:74:23 
[error] 74 |        if (handFilter(n)){
[error]    |                       ^
[error]    |                       Found:    (n : Int)
[error]    |                       Required: String
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:75:21 
[error] 75 |          val deck = createDeck(n)
[error]    |                     ^^^^^^^^^^
[error]    |                     Not found: createDeck
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:103:49 
[error] 103 |    val dealerHand: IO[Hand] = readHandRepetition(dealerHandMsg, handErrMsg, handFilter)
[error]     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[error]     |                 Found:    cats.effect.IO[Int]
[error]     |                 Required: cats.effect.IO[com.analysis.blackJack.Hand]
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:114:45 
[error] 114 |      bestHand = calculateFlow(user, dealer, deck)
[error]     |                                             ^^^^
[error]     |                        Found:    (deck : com.analysis.blackJack.Hand)
[error]     |                        Required: com.analysis.blackJack.Deck
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:128:66 
[error] 128 |            userAction.flatMap(action => actionFlow(user, dealer, deck, action)))))
[error]     |                                                                  ^^^^
[error]     |                        Found:    (deck : com.analysis.blackJack.Hand)
[error]     |                        Required: com.analysis.blackJack.Deck
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:143:44 
[error] 143 |            case ln if (ln == period) => IO(tramps)
[error]     |                                            ^^^^^^
[error]     |                                            Not found: tramps
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:145:24 
[error] 145 |            case ln if (filter(ln))   => function(hand :+ ln.toInt)
[error]     |                        ^^^^^^
[error]     |                        Not found: filter
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:178:32 
[error] 178 |      case Continue => mainFlow(completedDeck)
[error]     |                                ^^^^^^^^^^^^^
[error]     |                                Not found: completedDeck
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\app\Analyze_BlackJack.scala:212:16 
[error] 212 |        } yield calculate(user,dealer,deck)
[error]     |                ^^^^^^^^^
[error]     |                Not found: calculate
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\calculation\HandProbabilityCalculator.scala:23:20 
[error] 23 |    new Rational(1, productOfList(r).toLong)
[error]    |                    ^^^^^^^^^^^^^
[error]    |                    Not found: productOfList
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\calculation\HandProbsCreater.scala:31:56 
[error] 31 |       val asynchronousResult: Future[Seq[Seq[Hand]]] = paralellLoopHit(dealerHand,usingDeck)
[error]    |                                                        ^^^^^^^^^^^^^^^
[error]    |                                              Not found: paralellLoopHit
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\calculation\HandStatisticsCreater.scala:29:22 
[error] 29 |      case h if 17 <= exchangeAce(h).sum => Seq(exchangeAce(h))
[error]    |                      ^^^^^^^^^^^
[error]    |                      Not found: exchangeAce
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\calculation\HandStatisticsCreater.scala:29:48 
[error] 29 |      case h if 17 <= exchangeAce(h).sum => Seq(exchangeAce(h))
[error]    |                                                ^^^^^^^^^^^
[error]    |                                                Not found: exchangeAce
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:11:35 
[error] 11 |  def accuracyRate(implicit probs: ProbabilityStatistics[Int]) = probs.get(_ => true)
[error]    |                                   ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:13:38 
[error] 13 |  def dealerBurstRate(implicit probs: ProbabilityStatistics[Int]) = probs.get(21 < _)
[error]    |                                      ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:15:52 
[error] 15 |  def dealerWinRate(userScore: Int)(implicit probs: ProbabilityStatistics[Int]) =
[error]    |                                                    ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:18:53 
[error] 18 |  def dealerLoseRate(userScore: Int)(implicit probs: ProbabilityStatistics[Int]) =
[error]    |                                                     ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:24:64 
[error] 24 |  def userBurstRate(userScore: Int, deck: Deck)(implicit probs: ProbabilityStatistics[Int]) = {
[error]    |                                                                ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:28:50 
[error] 28 |  def userWinRate(userScore: Int)(implicit probs: ProbabilityStatistics[Int]) =
[error]    |                                                  ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:34:51 
[error] 34 |  def userLoseRate(userScore: Int)(implicit probs: ProbabilityStatistics[Int]) =probs.get(x => x <= 21 && userScore < x)
[error]    |                                                   ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:36:47 
[error] 36 |  def drawRate(userScore: Int)(implicit probs: ProbabilityStatistics[Int]) = probs.get(_ == userScore)
[error]    |                                               ^^^^^^^^^^^^^^^^^^^^^
[error]    |                                   Not found: type ProbabilityStatistics
[error] -- [E006] Not Found Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\strategy\DetailsStrategy.scala:43:30 
[error] 43 |  private implicit val probs: ProbabilityStatistics[Int] = probabilityStatistics
[error]    |                              ^^^^^^^^^^^^^^^^^^^^^
[error]    |                              Not found: type ProbabilityStatistics
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\blackJack\util\DeckUtility.scala:24:21 
[error] 24 |    if (deckNum < 1) Nil
[error]    |                     ^^^
[error]    |                     Found:    collection.immutable.Nil.type
[error]    |                     Required: com.analysis.blackJack.Deck
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\common\calculation\Probs.scala:20:19 
[error] 20 |    elems.foldLeft(Nil: Probs[K])((acc,x) => acc.addValue(x))
[error]    |                   ^^^
[error]    |                   Found:    collection.immutable.Nil.type
[error]    |                   Required: com.analysis.common.calculation.Probs[K]
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\common\calculation\ProbsMaker.scala:18:15 
[error] 18 |    l.foldLeft(Nil: Probs[K])((acc,x) => acc.addValue(x))
[error]    |               ^^^
[error]    |               Found:    collection.immutable.Nil.type
[error]    |               Required: com.analysis.common.calculation.Probs[K]
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\common\util\RichSequence.scala:6:32 
[error] 6 |  def :-[A](that: A): I = l.diff(Seq(that))
[error]   |                          ^^^^^^^^^^^^^^^^^
[error]   |       Found:    Seq[Int]
[error]   |       Required: I
[error]   |
[error]   |       where:    I is a type in class RichSequence with bounds <: Seq[Int]
[error] -- [E007] Type Mismatch Error: C:\Users\soroc\Documents\Scala-workspace\Analyze_BlackJack\src\main\scala\com\analysis\common\util\RichSequence.scala:12:39 
[error] 12 |      case head :: tail => head * loop(tail)
[error]    |                                       ^^^^
[error]    |Found:    (tail : List[Int])
[error]    |Required: I
[error]    |
[error]    |where:    I is a type in class RichSequence with bounds >: (?1 : ::[Int]) and <: Seq[Int]
[error] 36 errors found
[error] 36 errors found
[error] (Compile / compileIncremental) Compilation failed
[error] Total time: 24 s, completed 2021/09/04 21:15:14
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
