[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download" ;*/*:dumpStructureTo C:/Users/soroc/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 63748, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 15.0.2)
[debug]       Load.loadUnit: plugins took 14.4239ms
[debug]       Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\soroc\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\soroc\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7863 ms
[debug]           Load.resolveProject(global-plugins) took 0.7934ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\soroc\.sbt\1.0\plugins, plugins: List(<none>))) took 1.8339ms
[debug] [Loading] Done in C:\Users\soroc\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 2.465ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0068ms
[debug]     Load.loadUnit(file:/C:/Users/soroc/.sbt/1.0/plugins/, ...) took 17.91ms
[debug]   Load.apply: load took 18.6503ms
[debug]   Load.apply: resolveProjects took 0.0581ms
[debug]   Load.apply: finalTransforms took 2.9165ms
[debug]   Load.apply: config.delegates took 0.1424ms
[debug]   Load.apply: Def.make(settings)... took 20.8574ms
[debug]   Load.apply: structureIndex took 7.3502ms
[debug]   Load.apply: mkStreams took 0.0029ms
[info] loading global plugins from C:\Users\soroc\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 431.6348ms
[debug]           Load.loadUnit: plugins took 13.7801ms
[debug]           Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\soroc\Documents\Scala-workspace\BlackJack\project
[debug]             Load.loadUnit: mkEval took 0.1705ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\soroc\Documents\Scala-workspace\BlackJack\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7763 ms
[info] loading settings for project blackjack-build from idea.sbt ...
[debug]               Load.resolveProject(blackjack-build) took 1.0376ms
[debug]             Load.loadTransitive: finalizeProject(Project(id blackjack-build, base: C:\Users\soroc\Documents\Scala-workspace\BlackJack\project, plugins: List(<none>))) took 2.1007ms
[debug] [Loading] Done in C:\Users\soroc\Documents\Scala-workspace\BlackJack\project, returning: (blackjack-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 11.6504ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.618ms
[debug]         Load.loadUnit(file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/project/, ...) took 28.4609ms
[debug]       Load.apply: load took 29.155ms
[debug]       Load.apply: resolveProjects took 0.0856ms
[debug]       Load.apply: finalTransforms took 3.5685ms
[debug]       Load.apply: config.delegates took 0.1398ms
[debug]       Load.apply: Def.make(settings)... took 26.0428ms
[debug]       Load.apply: structureIndex took 7.9739ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Users\soroc\Documents\Scala-workspace\BlackJack\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 136.39ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\soroc\Documents\Scala-workspace\BlackJack
[debug]       Load.loadUnit: mkEval took 0.1846ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\soroc\Documents\Scala-workspace\BlackJack, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.7014 ms
[info] loading settings for project blackjack from build.sbt ...
[debug]         Load.resolveProject(blackjack) took 17.0004ms
[debug]       Load.loadTransitive: finalizeProject(Project(id blackjack, base: C:\Users\soroc\Documents\Scala-workspace\BlackJack, plugins: List(<none>))) took 18.1138ms
[debug] [Loading] Done in C:\Users\soroc\Documents\Scala-workspace\BlackJack, returning: (blackjack)
[debug]     Load.loadUnit: loadedProjectsRaw took 288.1467ms
[debug]     Load.loadUnit: cleanEvalClasses took 23.9546ms
[debug]   Load.loadUnit(file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/, ...) took 448.9118ms
[debug] Load.apply: load took 449.8583ms
[debug] Load.apply: resolveProjects took 0.0581ms
[debug] Load.apply: finalTransforms took 8.1639ms
[debug] Load.apply: config.delegates took 0.1281ms
[debug] Load.apply: Def.make(settings)... took 39.0571ms
[debug] Load.apply: structureIndex took 7.9331ms
[debug] Load.apply: mkStreams took 0.0021ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to blackJack (in build file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to blackJack (in build file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/soroc/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\soroc\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 0 s, completed 2021/08/19 23:22:15
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to blackJack (in build file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/)
[debug] > Exec(set ideaPort in Global := 63748, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to blackJack (in build file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
