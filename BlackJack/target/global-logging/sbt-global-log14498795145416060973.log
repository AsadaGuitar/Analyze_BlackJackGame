[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download" ;*/*:dumpStructureTo C:/Users/soroc/AppData/Local/Temp/sbt-structure1.xml; session clear-all ; set ideaPort in Global := 49607, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 15.0.2)
[debug]       Load.loadUnit: plugins took 12.9774ms
[debug]       Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\soroc\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\soroc\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.909 ms
[debug]           Load.resolveProject(global-plugins) took 1.0664ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\soroc\.sbt\1.0\plugins, plugins: List(<none>))) took 2.6273ms
[debug] [Loading] Done in C:\Users\soroc\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 3.2532ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0069ms
[debug]     Load.loadUnit(file:/C:/Users/soroc/.sbt/1.0/plugins/, ...) took 17.5065ms
[debug]   Load.apply: load took 18.4266ms
[debug]   Load.apply: resolveProjects took 0.0848ms
[debug]   Load.apply: finalTransforms took 4.459ms
[debug]   Load.apply: config.delegates took 0.2178ms
[debug]   Load.apply: Def.make(settings)... took 21.5628ms
[debug]   Load.apply: structureIndex took 7.4636ms
[debug]   Load.apply: mkStreams took 0.0034ms
[info] loading global plugins from C:\Users\soroc\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 427.6895ms
[debug]           Load.loadUnit: plugins took 15.3159ms
[debug]           Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\soroc\Documents\Scala-workspace\BlackJack\project
[debug]             Load.loadUnit: mkEval took 0.2267ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\soroc\Documents\Scala-workspace\BlackJack\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7014 ms
[info] loading settings for project blackjack-build from idea.sbt ...
[debug]               Load.resolveProject(blackjack-build) took 0.9114ms
[debug]             Load.loadTransitive: finalizeProject(Project(id blackjack-build, base: C:\Users\soroc\Documents\Scala-workspace\BlackJack\project, plugins: List(<none>))) took 1.885ms
[debug] [Loading] Done in C:\Users\soroc\Documents\Scala-workspace\BlackJack\project, returning: (blackjack-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 11.1338ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.1891ms
[debug]         Load.loadUnit(file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/project/, ...) took 29.0684ms
[debug]       Load.apply: load took 29.7649ms
[debug]       Load.apply: resolveProjects took 0.0537ms
[debug]       Load.apply: finalTransforms took 3.346ms
[debug]       Load.apply: config.delegates took 0.2607ms
[debug]       Load.apply: Def.make(settings)... took 18.8472ms
[debug]       Load.apply: structureIndex took 6.8649ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\soroc\Documents\Scala-workspace\BlackJack\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 183.1959ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\soroc\Documents\Scala-workspace\BlackJack
[debug]       Load.loadUnit: mkEval took 0.1822ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\soroc\Documents\Scala-workspace\BlackJack, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.0863 ms
[info] loading settings for project blackjack from build.sbt ...
[debug]         Load.resolveProject(blackjack) took 22.2086ms
[debug]       Load.loadTransitive: finalizeProject(Project(id blackjack, base: C:\Users\soroc\Documents\Scala-workspace\BlackJack, plugins: List(<none>))) took 23.676ms
[debug] [Loading] Done in C:\Users\soroc\Documents\Scala-workspace\BlackJack, returning: (blackjack)
[debug]     Load.loadUnit: loadedProjectsRaw took 781.9265ms
[debug]     Load.loadUnit: cleanEvalClasses took 24.959ms
[debug]   Load.loadUnit(file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/, ...) took 990.5773ms
[debug] Load.apply: load took 991.4525ms
[debug] Load.apply: resolveProjects took 0.0526ms
[debug] Load.apply: finalTransforms took 10.0114ms
[debug] Load.apply: config.delegates took 0.2192ms
[debug] Load.apply: Def.make(settings)... took 40.9375ms
[debug] Load.apply: structureIndex took 11.4176ms
[debug] Load.apply: mkStreams took 0.0023ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to blackJack (in build file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to blackJack (in build file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/soroc/AppData/Local/Temp/sbt-structure1.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\soroc\AppData\Local\Temp\sbt-structure1.xml...
[info] Done.
[success] Total time: 2 s, completed 2021/08/19 22:20:48
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to blackJack (in build file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/)
[debug] > Exec(set ideaPort in Global := 49607, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to blackJack (in build file:/C:/Users/soroc/Documents/Scala-workspace/BlackJack/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
